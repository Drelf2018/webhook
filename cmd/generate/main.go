package main

import (
	"encoding/json"
	"fmt"
	"os"
	"strconv"
	"strings"

	"github.com/Drelf2018/initial"
	"github.com/Drelf2018/webhook/api"
)

type AutoGenerated struct {
	FixedFileInfo struct {
		FileVersion struct {
			Major int64 `json:"Major"`
			Minor int64 `json:"Minor"`
			Patch int64 `json:"Patch"`
			Build int64 `json:"Build"`
		} `json:"FileVersion"`
		FileFlagsMask string `json:"FileFlagsMask" default:"3f"`
		FileFlags     string `json:"FileFlags" default:"00"`
		FileOS        string `json:"FileOS" default:"040004"`
		FileType      string `json:"FileType" default:"01"`
		FileSubType   string `json:"FileSubType" default:"00"`
	} `json:"FixedFileInfo" default:"initial.Default"`
	StringFileInfo struct {
		Comments         string `json:"Comments" default:"分布式博文收集广播终端"`
		FileDescription  string `json:"FileDescription" default:"分布式博文收集广播终端"`
		ProductVersion   string `json:"ProductVersion"`
		LegalCopyright   string `json:"LegalCopyright" default:"Copyright (c) 2023 Drelf2018"`
		OriginalFilename string `json:"OriginalFilename" default:"webhook"`
		ProductName      string `json:"ProductName" default:"分布式博文收集广播终端"`
	} `json:"StringFileInfo" default:"initial.Default"`
	VarFileInfo struct {
		Translation struct {
			LangID    string `json:"LangID" default:"0804"`
			CharsetID string `json:"CharsetID" default:"04B0"`
		} `json:"Translation" default:"initial.Default"`
	} `json:"VarFileInfo" default:"initial.Default"`
}

func split(ver string) (r []int64) {
	for _, s := range strings.Split(strings.ReplaceAll(ver, "v", ""), ".") {
		idx, _ := strconv.ParseInt(s, 10, 64)
		r = append(r, idx)
	}
	return
}

func main() {
	versioninfo := initial.Default(&AutoGenerated{})
	versioninfo.StringFileInfo.ProductVersion = api.VERSION
	idx := split(api.VERSION)
	versioninfo.FixedFileInfo.FileVersion.Major = idx[0]
	versioninfo.FixedFileInfo.FileVersion.Minor = idx[1]
	versioninfo.FixedFileInfo.FileVersion.Patch = idx[2]
	b, _ := json.MarshalIndent(versioninfo, "", "\t")
	fmt.Printf("json: %v\n", string(b))
	os.WriteFile("cmd/build/versioninfo.json", b, os.ModePerm)
}
